{
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "choices[0].message.content",
        "options": {}
      },
      "id": "0a6d3a53-d244-4134-8154-5b2c154fbcf0",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -384,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"most-trending\": {\n\n    \"#1\": { \n\n      \"query\":\"{{ $json.related_queries.rising[0].query }}\",\n      \"score\":\"{{ $json.related_queries.rising[0].extracted_value }}\"\n\n    },\n\n\n    \"#2\": { \n\n      \"query\":\"{{ $json.related_queries.rising[1].query }}\",\n      \"score\":\"{{ $json.related_queries.rising[1].extracted_value }}\"\n\n    }\n  }\n}",
        "options": {}
      },
      "id": "3f7dd9df-a482-4067-ad8e-99a54ddcf76f",
      "name": "2 Most Trending",
      "type": "n8n-nodes-base.set",
      "position": [
        -1648,
        32
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "// Get the top array from your JSON\nconst topItems = $('Google Trends').first().json.related_queries.top;\n\n// Filter the items to only include those with extracted_value > 30\nconst filtered = topItems.filter(item => item.extracted_value > 30);\n\n// Map the filtered items to their query values and join them with commas\nconst resultString = filtered.map(item => item.query).join(', ');\n\n// Return the result in a new JSON property\nreturn [{ json: { result: resultString } }];\n"
      },
      "id": "fab7e00e-5bc9-4fc0-a53f-507c0af5ed87",
      "name": "High search volume keywords",
      "type": "n8n-nodes-base.code",
      "position": [
        -1424,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search?engine=google_trends",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "=ai agents"
            },
            {
              "name": "geo",
              "value": "US"
            },
            {
              "name": "hl",
              "value": "en"
            },
            {
              "name": "date",
              "value": "={{ $now.minus({ days: 3 }).format('yyyy-MM-dd') }} {{ $now.format('yyyy-MM-dd') }}"
            },
            {
              "name": "data_type",
              "value": "RELATED_QUERIES"
            },
            {
              "name": "engine",
              "value": "google_trends"
            },
            {
              "name": "api_key",
              "value": "35f40bdb4aeeac6edb5898b0a827803693bf1b07e6be7533d52b5ac484817196"
            }
          ]
        },
        "options": {}
      },
      "id": "093208c0-c80d-4cdb-9c00-5f9cdd3c2b67",
      "name": "Google Trends",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1872,
        32
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "c6a594cd-e743-45e3-860f-e0ae413b05de",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        -608,
        32
      ],
      "webhookId": "[GENERATED_WEBHOOK_ID]",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "fieldToSplitOut": "['most-trending']",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1440,
        384
      ],
      "id": "629f7432-f48f-40fc-abd8-776415ccd8a7",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bFD1P2C3douYo1stTAPJ5wiKv4BKY9vpANQMs0wBI4E",
          "mode": "list",
          "cachedResultName": "n8n flow",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bFD1P2C3douYo1stTAPJ5wiKv4BKY9vpANQMs0wBI4E/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1889890280,
          "mode": "list",
          "cachedResultName": "Sheet2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bFD1P2C3douYo1stTAPJ5wiKv4BKY9vpANQMs0wBI4E/edit#gid=1889890280"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $json.query }}",
            "value": "={{ $json.score }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "value",
              "displayName": "value",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -1248,
        384
      ],
      "id": "2afa698a-d864-4aec-8fe5-2cafa01a87ee",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZbUXMLOvUn8DP4A2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "perplexityApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar-pro\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Act as a skilled editor revising AI-generated text to sound authentically human. Follow these rules:\\n\\n1. Punctuation Adjustments\\n   - Replace em dashes, semicolons, or rephrase sentences where appropriate.\\n   - Avoid semicolons in casual contexts; use periods or conjunctions (e.g., 'and,' 'but').\\n   - Remove mid-sentence ellipses unless mimicking deliberate hesitation.\\n   - Limit parenthetical asides; integrate explanations into the main sentence.\\n   - Use colons sparingly.\\n\\n2. Language\\n   - Replace hedging phrases with direct statements.\\n   - Avoid stock transitions.\\n   - Vary repetitive terms.\\n   - Use contractions in informal contexts.\\n   - Replace overly formal words with simpler alternatives.\\n\\n3. Style\\n   - Prioritize concise, varied sentence lengths.\\n   - Allow minor imperfections.\\n   - Maintain the core message but adjust tone to match the audience.\\n make the post student centric crrently in a second year batchleor degree\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You are a researcher and expert copywriter in a business development team of an AI Automation Agency. Generate exactly one LinkedIn post that adheres to LinkedIn's API formatting guidelines and is easy for humans to read. Follow these rules:\\n\\nStructure:\\n1. Hook: Start with a bold opening line using Unicode characters (e.g., \\\"ùêÅùêéùêãùêÉ ùêíùêìùêÄùêìùêÑùêåùêÑùêçùêì\\\").\\n2. Body: Use short paragraphs (1-3 sentences) separated by \\\\n\\\\n.\\n3. Use bullet points (‚Ä¢) for key features or highlights.\\n4. End with a clear call-to-action (e.g., \\\"Comment below with your thoughts!\\\").\\n\\nFormatting Requirements:\\n- Remove all numeric citation brackets like [2], [3], [4] from the text.\\n- Instead of citation brackets, if needed, add a brief phrase like \\\"according to Google I/O 2025\\\" or \\\"as reported by DeepMind\\\" naturally within the sentence.\\n- No Markdown or rich text formatting.\\n- Use Unicode characters or emojis for emphasis (e.g., ‚òÖ, üöÄ).\\n- Include up to 3 relevant hashtags at the end (e.g., #AI #Automation).\\n- For URLs or references, use placeholders like [Link] instead of raw URLs.\\n- If mentioning users or companies, use official LinkedIn URN format (e.g., \\\"urn:li:organization:123456\\\").\\n\\nContent Rules:\\n- Max 1,200 characters.\\n- Avoid promotional language.\\n- Include one statistical claim or industry insight.\\n- Add one personal anecdote or professional observation.\\n\\nReturn the post as plain text without additional commentary in a short form not exceding 50 words.\\n\\nInput: {{ $json.message.content }}\"\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "9681cbf2-b40d-47e3-9ef2-d484c0c9ded3",
      "name": "Research Topic- Perplexity",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -832,
        32
      ],
      "typeVersion": 4.2,
      "credentials": {
        "perplexityApi": {
          "id": "6aJU8cPAFVs85Qq5",
          "name": "Perplexity account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "=You are part of a team that creates world class blog posts. Your job is to choose the topic for each blog post. \n\nThe blog posts are posted on the website of a [COMPANY NAME + DESCRIPTION + PRODUCTS + TARGET MARKET]. The blog posts are mainly posted as part of an SEO campaign to get [YOUR_COMPANY] to rank high for its products and services.\n\nIn this instance, you are given a list of 2 keywords which have been trending the most on Google news search over the past few days. \n\nYour job is to pick one which you think would make for the most relevant blog post with the best SEO outcomes for the client. \n\nThe keywords have two attributes: \n\n1. query: This attribute determines the search query that users have been searching for which is trending. \n\n2. value: This attribute determines what percentage increase the keyword has seen compared to previous periods (i.e. the increase in search volume). \n\nYou must choose one out of the taking into consideration both the relevance of the keyword for [YOUR_COMPANY]'s SEO efforts and the comparative trendiness determined by the value attribute. \n\nOutput the keyword you decided to post a blog on and nothing else. Don't explain your reasoning. Just output the keyword. \n\nThis instance: \n\nKeyword 1:\n{{ $('2 Most Trending').item.json['most-trending']['#1'].toJsonString() }} \n\nKeyword2: \n{{ $('2 Most Trending').item.json['most-trending']['#2'].toJsonString() }} "
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1200,
        32
      ],
      "id": "4afc1195-15dc-4062-b1ac-455ed224384b",
      "name": "Message a model",
      "retryOnFail": true,
      "credentials": {
        "googlePalmApi": {
          "id": "Ed9MZgAALCHY76kc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.content.parts[0].text }}",
        "additionalFields": {}
      },
      "id": "03223540-2b3d-4b4e-8f76-30604a39c1ca",
      "name": "Create Tweet",
      "type": "n8n-nodes-base.twitter",
      "position": [
        384,
        256
      ],
      "typeVersion": 2,
      "credentials": {
        "twitterOAuth2Api": {
          "id": "Pe3rBwYHlveblkHm",
          "name": "X account 2"
        }
      }
    },
    {
      "parameters": {
        "person": "Li-5hSSh8i",
        "text": "={{ $(\"Split Out\").item.json['choices[0].message.content'] }}",
        "shareMediaCategory": "IMAGE",
        "additionalFields": {}
      },
      "id": "70a4e0fd-c0e4-4dc0-bce9-0ed6a9622040",
      "name": "Create a post",
      "type": "n8n-nodes-base.linkedIn",
      "position": [
        400,
        -208
      ],
      "typeVersion": 1,
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "vdKQsJC8kz6kSKlr",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a professional text editor tasked with reducing the length of a given text for a twitter post to no more than 30-40 while preserving its core meaning, tone, and essential details.\n\nKeep the message clear and concise.\n\nRemove redundancy, filler words, and overly complex phrasing.\n\nMaintain logical flow and readability.\n\nDo not add new information or change the intended meaning.\n\nIf possible, keep important keywords for searchability.\n\nAnd do have the relevant hastags to attarct audince\n\nthe input is {{ $json['choices[0].message.content'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -64,
        256
      ],
      "id": "5187b8bd-8cb3-4267-8155-7ce55082448f",
      "name": "Message a model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Ed9MZgAALCHY76kc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1bFD1P2C3douYo1stTAPJ5wiKv4BKY9vpANQMs0wBI4E",
          "mode": "list",
          "cachedResultName": "n8n flow",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bFD1P2C3douYo1stTAPJ5wiKv4BKY9vpANQMs0wBI4E/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1841719070,
          "mode": "list",
          "cachedResultName": "Sheet3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bFD1P2C3douYo1stTAPJ5wiKv4BKY9vpANQMs0wBI4E/edit#gid=1841719070"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Text": "={{ $json.text }}"
          },
          "matchingColumns": [
            "Text"
          ],
          "schema": [
            {
              "id": "Text",
              "displayName": "Text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "7cb26d14-35ce-47ca-90b2-6d34f8e58a8d",
      "name": "Append or update row in sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        656,
        144
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZbUXMLOvUn8DP4A2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2080,
        32
      ],
      "id": "b5191bbd-6fcd-416a-90c2-7e21ac5a523f",
      "name": "When clicking ‚ÄòExecute workflow‚Äô"
    },
    {
      "parameters": {
        "content": "## Trends\n**Scrape the google trends to get the top topics and select the top 2 from it",
        "height": 288,
        "width": 624
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1920,
        -64
      ],
      "typeVersion": 1,
      "id": "bb747c53-313a-4b2b-8292-e88b2d3c1151",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Store the retrived trends in sheets \n",
        "height": 288,
        "width": 368
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1472,
        272
      ],
      "typeVersion": 1,
      "id": "a78afe67-e91e-4d99-ac34-f7b371fae255",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Generate initial content and topics",
        "height": 272,
        "width": 304
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1232,
        -64
      ],
      "typeVersion": 1,
      "id": "e515771f-3b8a-4222-94d9-7271e4b800e7",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Research the topic to get refined results and content",
        "height": 272,
        "width": 608
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        -64
      ],
      "typeVersion": 1,
      "id": "c07382cb-a156-4ca2-ba9c-bee4a0f62580",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Post on social media",
        "height": 704,
        "width": 256
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        336,
        -288
      ],
      "typeVersion": 1,
      "id": "395d94e9-7f83-43c4-aefc-10ccd759056b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## shorten the ans for twitter restrictions",
        "height": 224,
        "width": 256
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        160
      ],
      "typeVersion": 1,
      "id": "df57314a-a405-4905-82a0-08c621dfb3e4",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "resource": "image",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash-exp-image-generation",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash-exp-image-generation"
        },
        "prompt": "={{ $json.content.parts[0].text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        144,
        -208
      ],
      "id": "f0f3fbb0-9377-4d39-886a-9303549f0eea",
      "name": "Generate an image",
      "credentials": {
        "googlePalmApi": {
          "id": "Ed9MZgAALCHY76kc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "=Role & Goal: You are an expert in creating professional, minimalistic, and LinkedIn-appropriate visuals. Your task is to design a simple yet eye-catching image that directly supports the meaning and tone of the given LinkedIn post. The visual must convey the message clearly without being cluttered.\n\nInput Text:\n{{ $json['choices[0].message.content'] }}\n\nRequirements:\n\nVisual Style:\n\nProfessional and minimalistic (clean lines, ample white space, simple color palette).\n\nModern flat or semi-flat illustration style, or minimal photo-based design.\n\nAvoid busy or distracting elements.\nAlso just give the output no extra text no pleasing words anything just the prompt that is to be used\nRelevance to Post:\n\nIdentify the core theme, idea, or emotion from the text.\n\nDepict symbols, objects, or simple metaphors that represent the message.\n\nEnsure any characters, objects, or charts are directly tied to the topic.\n\nColor & Composition:\n\nUse a neutral or brand-appropriate background.\n\nLimit to 2‚Äì3 primary colors and 1‚Äì2 accent colors.\n\nKeep elements balanced, with central focus on the key idea.\n\nText on Image (if needed):\n\nShort, impactful words from the post (max 6‚Äì8 words).\n\nUse large, clean sans-serif fonts.\n\nMaintain high contrast for readability.\n\nFormat & Output:\n\nAspect Ratio: 1:1 (square) or 4:5 (portrait) for LinkedIn feed optimization.\n\nHigh resolution (at least 1080px width).\n\nPNG or JPG format.\n\nCreative Direction Examples:\n\nIf the post is about growth ‚Üí simple upward arrow, sprouting plant, or minimal bar chart.\n\nIf the post is about teamwork ‚Üí 2‚Äì4 abstract human figures connecting shapes.\n\nIf the post is about a milestone ‚Üí a trophy, target, or symbolic number display.\n\nFinal Note: Keep it elegant, easy to understand at a glance, and aligned with LinkedIn‚Äôs professional tone."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -160,
        -208
      ],
      "id": "e2d95876-ef8e-41f9-b02a-21c881b29bc3",
      "name": "Message a model2",
      "credentials": {
        "googlePalmApi": {
          "id": "Ed9MZgAALCHY76kc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Image generation for linkedIn post",
        "height": 304,
        "width": 464
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -176,
        -304
      ],
      "typeVersion": 1,
      "id": "09d3321e-4cbf-4e08-904f-31d808160ea7",
      "name": "Sticky Note6"
    }
  ],
  "connections": {
    "Split Out": {
      "main": [
        [
          {
            "node": "Message a model1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2 Most Trending": {
      "main": [
        [
          {
            "node": "High search volume keywords",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "High search volume keywords": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Trends": {
      "main": [
        [
          {
            "node": "2 Most Trending",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Topic- Perplexity": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Research Topic- Perplexity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Tweet": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a post": {
      "main": [
        []
      ]
    },
    "Message a model1": {
      "main": [
        [
          {
            "node": "Create Tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‚ÄòExecute workflow‚Äô": {
      "main": [
        [
          {
            "node": "Google Trends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate an image": {
      "main": [
        [
          {
            "node": "Create a post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "Generate an image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b092bec8eaf23f64ee321e1856f84b1590cae8db582ec7a741ab5e80f0e47d12"
  }
}
